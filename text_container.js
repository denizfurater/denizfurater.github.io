(function() {
      'use strict'

      window.onload = () => {

        let text_container = document.querySelector('.text-container')
        let current_text_string = 0 // das wird quasi als index f√ºr den text_array benutzt.

        let text_array = [ // muss wegen der asynchronen update_text Funktion fr√ºher als die Funktion selbst initialisert werden
          'Hello', 'Hallo', 'Merhaba', 'Ciao']//, 'sweet', 'und', 'sexy', 'und', 'üê∂', 'üê±', 'üê≠', 'üêπ', 'üê∞', 'ü¶ä', 'ü¶ù', 'üêª', 'üêº', 'ü¶ò', 'ü¶°', 'üê®', 'üêØ', 'ü¶Å', 'üêÆ', 'üê∑', 'üêΩ', 'üê∏', 'üêµ', 'üôà', 'üôâ', 'üôä', 'üêí', 'üêî', 'üêß', 'üê¶', 'üê§', 'üê£', 'üê•', 'ü¶Ü', 'ü¶¢', 'ü¶Ö', 'ü¶â', 'ü¶ö', 'ü¶ú', 'ü¶á', 'üê∫', 'üêó', 'üê¥', 'ü¶Ñ', 'üêù', 'üêõ', 'ü¶ã', 'üêå', 'üêö', 'üêû', 'üêú', 'ü¶ó', 'üï∑', 'üï∏', 'ü¶Ç', 'ü¶ü', 'ü¶†', 'üê¢', 'üêç', 'ü¶é', 'ü¶ñ', 'ü¶ï', 'üêô', 'ü¶ë', 'ü¶ê', 'ü¶Ä', 'üê°', 'üê†', 'üêü', 'üê¨', 'üê≥', 'üêã', 'ü¶à', 'üêä', 'üêÖ', 'üêÜ', 'ü¶ì', 'ü¶ç', 'üêò', 'ü¶è', 'ü¶õ', 'üê™', 'üê´', 'ü¶ô', 'ü¶í', 'üêÉ', 'üêÇ', 'üêÑ', 'üêé', 'üêñ', 'üêè', 'üêë', 'üêê', 'ü¶å', 'üêï', 'üê©', 'üêà', 'üêì', 'ü¶É', 'üïä', 'üêá', 'üêÅ', 'üêÄ', 'üêø', 'ü¶î', 'üêæ', 'üêâ', 'üê≤', 'üåµ', 'üéÑ', 'üå≤', 'üå≥', 'üå¥', 'üå±', 'üåø', '‚òòÔ∏è', 'üçÄ', 'üéç', 'üéã', 'üçÉ', 'üçÇ', 'üçÅ', 'üçÑ', 'üåæ', 'üíê', 'üå∑', 'üåπ', 'ü•Ä', 'üå∫', 'üå∏', 'üåº', 'üåª', 'üåû', 'üåù', 'üåõ', 'üåú', 'üåö'
        

        let update_text = async () => {
          text_container.innerHTML = text_array[current_text_string]

          if (current_text_string <= text_array.length - 1) {
              current_text_string = current_text_string + 1 // erh√∂ht den index vom text_array um 1, solange man nicht am Ende des text_array ist.
          } else {
            current_text_string = 0 // wenn am Ende, dann wieder von vorn.
          }
        }

        let fade_in = async () => {
          text_container.style.opacity = 1
          text_container.style.transform = 'translateY(0)'
        }

        let fade_out = async () => {
          // mit dem fade_out 1500ms warten, dass man den Text lesen kann.
          setTimeout(() => {
            text_container.style.opacity = 0
            text_container.style.transform = 'translateY(0.25em)'
          }, 1500)
        }

        setInterval(() => {
          update_text().then(fade_in).then(fade_out) // erkl√§rt sich glaub ich von selbst.
        }, 2000) // 2000ms ist die l√§nge f√ºr einen ganzen Durchgang: fade_in (dauert laut der css transition 250ms) und fade_out wartet 1500ms und braucht dann noch 250ms f√ºr die Animation. Also 250ms + 1500ms + 250ms = 2000ms.

      }

    })()
